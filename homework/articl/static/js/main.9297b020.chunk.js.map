{"version":3,"sources":["assets/images/login_bg.jpg","pages/Login/index.js","components/Header/index.jsx","pages/Detail/index.js","pages/Home/index.js","pages/Publish/index.js","pages/Index/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","isRegister","account","loginState","loginBtn","regst","user","regstUser","value","pass","regstPass","regstPass2","message","info","Axios","post","then","res","data","code","setState","openNotification","login","id","loginUser","loginPass","sessionStorage","localStorage","userInfo","JSON","stringify","alert","goRegt","args","description","duration","notification","open","this","to","login_bg","require","btnStyle","background","color","tabTitleStyle","borderLeft","style","className","display","type","placeholder","ref","input","onClick","Component","Header","imageUrl","isShow","infoChange","props","showModal","loginOut","stateChange","parse","imgUrl","src","alt","Detail","item","back","console","log","history","goBack","renderTime","date","dateee","Date","toJSON","toISOString","replace","detail","content","__html","time","title","dangerouslySetInnerHTML","Home","list","officialCount","draftCount","page","current","goSub","push","remove","uid","filter","elem","compile","draft","getList","official","changePage","change","get","callback","total","itemList","length","map","index","key","match","url","defaultPageSize","onChange","path","component","Publish","editorContent","visible","confirmLoading","save","submitText","e","target","confirm","elemMenu","refs","editorElemMenu","elemBody","editorElemBody","editor","E","customConfig","onchange","html","txt","menus","uploadImgShowBase64","create","textSelector","children","innerHTML","placement","onConfirm","okText","cancelText","cancel","backgroundColor","border","padding","overflowY","height","borderTop","Index","loading","handleOk","undefined","handleChange","file","status","getBase64","originFileObj","name","handleCancel","uploadButton","onOk","onCancel","listType","showUploadList","action","beforeUpload","width","img","reader","FileReader","addEventListener","result","readAsDataURL","isJpgOrPng","error","isLt2M","size","App","from","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9297b020.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.69751b48.jpg\";","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { message, notification } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport './style.css'\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n    isRegister: false, //是否注册状态\r\n    account: '', //登录帐号\r\n    loginState: 0\r\n  }\r\n\r\n  // 登录/注册\r\n  loginBtn = () => {\r\n    const { isRegister } = this.state\r\n    if (isRegister) {\r\n      // 注册\r\n      const regst = {\r\n        user: this.regstUser.value,\r\n        pass: this.regstPass.value\r\n      }\r\n      if (this.regstPass.value !== this.regstPass2.value) {\r\n        message.info('两次密码不一致');\r\n        return\r\n      }\r\n      Axios.post('/api/regst', regst).then(res => {\r\n        if (res.data.code === 2) {\r\n          message.info('帐号或密码为空')\r\n        } else if (res.data.code === 0) {\r\n          const account = res.data.data\r\n          this.setState({ account,  isRegister: false})\r\n          this.openNotification()\r\n          this.regstUser.value = ''\r\n          this.regstPass.value = ''\r\n          this.regstPass2.value = ''\r\n        }\r\n      })\r\n    } else {\r\n      // 登录\r\n      const login = {\r\n        id: this.loginUser.value,\r\n        pass: this.loginPass.value\r\n      }\r\n      Axios.post('/api/login', login).then(res => {\r\n        switch (res.data.code) {\r\n          case 2:\r\n            return message.info('帐号或密码为空')\r\n          case 1:\r\n            return message.info('帐号或密码错误')\r\n          case 0:\r\n            sessionStorage.loginState = 1\r\n            localStorage.userInfo = JSON.stringify(res.data.data)\r\n            return this.setState({ loginState: 1 })\r\n          default:\r\n            return alert('登陆错误')\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  // 登录注册切换\r\n  goRegt = () => {\r\n    const isRegister = !this.state.isRegister\r\n    this.setState({ isRegister })\r\n  }\r\n\r\n  // 提示框\r\n  openNotification = () => {\r\n    const args = {\r\n      message: '注册成功',\r\n      description: `登录帐号为: ${this.state.account}`,\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const loginState = sessionStorage.loginState\r\n    this.setState({ loginState })\r\n  }\r\n\r\n  render() {\r\n\r\n    // 跳转登陆   刷新时，用户信息存在，则还是index页\r\n    if (this.state.loginState) {\r\n      return <Redirect to='/index/home' />\r\n    }\r\n\r\n    const login_bg = require('assets/images/login_bg.jpg')\r\n    const bgColor = '#ed2553'\r\n    const { isRegister } = this.state\r\n    const btnStyle = { background: isRegister ? '#fff' : bgColor, color: isRegister ? bgColor : '#fff' }\r\n    const tabTitleStyle = { color: isRegister ? '#fff' : bgColor, borderLeft: `5px solid ${isRegister ? '#fff' : bgColor}` }\r\n    return (\r\n      <div id='login' style={{ background: `url(${login_bg}) no-repeat 0 0 /100% 100%` }}>\r\n        <div id=\"aTitle\">文章管理系统</div>\r\n        <div id='login_tab' style={{ background: isRegister ? bgColor : '#fff' }}>\r\n          <h2 className='tab_title' style={tabTitleStyle}>{isRegister ? '注册' : '登录'}</h2>\r\n          <div className='login_item login'>\r\n            {/* 登录 */}\r\n            <div className='myForm' style={{ display: isRegister ? 'none' : 'block' }}>\r\n              <input type='text' className='input' placeholder=\"帐号\" ref={(input => { this.loginUser = input })} />\r\n              <input type='password' className='input' placeholder=\"密码\" ref={(input => { this.loginPass = input })} />\r\n            </div>\r\n            {/* 注册 */}\r\n            <div className='myForm register' style={{ display: isRegister ? 'block' : 'none' }}>\r\n              <input type='text' className='input' placeholder=\"昵称\" ref={(input => { this.regstUser = input })} />\r\n              <input type='password' className='input' placeholder=\"密码\" ref={(input => { this.regstPass = input })} />\r\n              <input type='password' className='input' placeholder=\"确认密码\" ref={(input => { this.regstPass2 = input })} />\r\n            </div>\r\n          </div>\r\n          {/* 登录注册切换按钮 */}\r\n          <span className='goRegt' style={btnStyle} onClick={this.goRegt}>{isRegister ? '登录' : '注册'}</span>\r\n          {/* 登录/注册 */}\r\n          <div className='login_button' style={btnStyle} onClick={this.loginBtn}>{isRegister ? '注册' : '登录'}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button } from \"antd\";\r\n\r\nimport './style.css'\r\nexport default class Header extends Component {\r\n\r\n  state = {\r\n    imageUrl: '',\r\n    user: '',\r\n    isShow: false\r\n  }\r\n\r\n  // 修改资料\r\n  infoChange = () => {\r\n    this.props.showModal()\r\n  }\r\n\r\n\r\n\r\n  // 退出登录\r\n  loginOut = () => {\r\n    sessionStorage.loginState = ''\r\n    this.props.loginOut()\r\n  }\r\n\r\n  // 修改状态\r\n  stateChange = () => {\r\n    const isShow = !this.state.isShow\r\n    this.setState({ isShow })\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const userInfo = JSON.parse(localStorage.userInfo)\r\n    this.setState({ imageUrl: userInfo.imgUrl, user: userInfo.user })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps() {\r\n    const { imageUrl, user, type } = this.props.info\r\n    if (type) {\r\n      const isShow = !this.state.isShow\r\n      this.setState({ user, imageUrl, isShow })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imageUrl, user } = this.state\r\n    return (\r\n      <div className='header'>\r\n        <div className='userInfo'>\r\n          <div className='infoShow' onClick={this.stateChange}>\r\n            <div className='avatar'>\r\n              <img src={imageUrl} alt=\"\" />\r\n            </div>\r\n            <div className='user'> {user} </div>\r\n          </div>\r\n          <div className='fnBtn' style={{ display: this.state.isShow ? 'block' : 'none' }}>\r\n            <div>\r\n              <Button onClick={this.infoChange}>修改</Button>\r\n              <Button onClick={this.loginOut}>退出</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Icon } from 'antd'\r\n\r\nimport './style.css'\r\n\r\nexport default class Detail extends Component {\r\n\r\n  state = {\r\n    item: '',\r\n    user: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const item = JSON.parse(sessionStorage.detail)\r\n    const user = JSON.parse(localStorage.userInfo).user\r\n    this.setState({ item, user })\r\n  }\r\n\r\n  back = () => {\r\n    console.log(this.props.history.goBack());\r\n  }\r\n\r\n  renderTime = (date) => {\r\n    var dateee = new Date(date).toJSON();\r\n    return new Date(+new Date(dateee) + 8 * 3600 * 1000).toISOString().replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '')\r\n  }\r\n\r\n  render() {\r\n    const content = { __html: this.state.item.content }\r\n    const time = this.renderTime(this.state.item.time)\r\n    const user = this.state.user\r\n    return (\r\n      <div id='detail'>\r\n        <header>\r\n          <div className='back'>\r\n            <div className='goback' onClick={this.back} >\r\n              <Icon type=\"arrow-left\" className='arrow-left' />\r\n              <span>返回</span>\r\n            </div>\r\n            <span className='title'>{this.state.item.title}</span>\r\n          </div>\r\n          <div className='info'>\r\n            <span className='user'>作者: {user}</span>\r\n            <span> {time}</span>\r\n          </div>\r\n        </header>\r\n        <div className='cont' dangerouslySetInnerHTML={content}></div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { Button, Pagination } from \"antd\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport Detail from './../Detail'\r\nimport './style.css'\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    id: '',   //用户id\r\n    list: [],   //文章列表\r\n    officialCount: 0,  //发布数量\r\n    draftCount: 0,  //草稿数量\r\n    type: 0,   //发布/草稿状态\r\n    page: 8,   //每页显示数量\r\n    current: 1,  //开始页数\r\n  }\r\n\r\n  // 去发表\r\n  goSub = () => { this.props.history.push('/index/publish') }\r\n\r\n  // 详情\r\n  detail = (item) => {\r\n    sessionStorage.detail = JSON.stringify(item)\r\n    // this.props.history.push('/index/detail')\r\n  }\r\n\r\n  // 删除\r\n  remove = (item) => {\r\n    Axios.post('/api/delOfficial', { uid: item.uid }).then(res => {\r\n      // console.log(res.data)\r\n      const arr = this.state.list\r\n      const list = arr.filter(elem => item.uid !== elem.uid)\r\n      const officialCount = this.state.officialCount - 1\r\n      this.setState({ list, officialCount })\r\n    })\r\n  }\r\n\r\n  // 编辑\r\n  compile = (item) => {\r\n    const arr = this.state.list\r\n    const list = arr.filter(elem => {\r\n      return elem.uid !== item.uid\r\n    })\r\n    this.setState({ list })\r\n    sessionStorage.draft = JSON.stringify(item)\r\n    this.props.history.push('/index/publish')\r\n    Axios.post('/api/delDraft', { uid: item.uid }).then(res => {\r\n      // console.log(res.data)\r\n    })\r\n  }\r\n\r\n\r\n  // tab草稿\r\n  draft = () => {\r\n    this.setState({ type: 1, current: 1 })\r\n    const { id, page } = this.state\r\n    this.getList(id, page, 0, 1)\r\n  }\r\n  // tab发布\r\n  official = () => {\r\n    this.setState({ type: 0, current: 1 })\r\n    const { id, page } = this.state\r\n    this.getList(id, page, 0, 0)\r\n  }\r\n\r\n  // 页码改变\r\n  changePage = (current) => {\r\n    this.setState({ current })\r\n    const { page, type, id } = this.state\r\n    current = page * (current - 1)\r\n    this.getList(id, page + current, current, type)\r\n  }\r\n\r\n  change = () => {\r\n    this.setState({ current: 1 })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = JSON.parse(localStorage.userInfo).id\r\n    Axios.get('/api/count?id=' + id).then(res => {\r\n      this.setState({\r\n        officialCount: res.data.data.officialCount,\r\n        draftCount: res.data.data.draftCount\r\n      })\r\n    })\r\n    this.setState({ id })\r\n    const { page, type } = this.state\r\n    this.getList(id, page, 0, type)\r\n  }\r\n\r\n  getList(id, page, current, type) {\r\n    Axios.get(`/api/list?id=${id}&type=${type}&current=${current}&page=${page}`).then(res => {\r\n      const list = res.data.data\r\n      this.setState({ list })\r\n    })\r\n  }\r\n\r\n  //如果有异步设置state值的情况，在组件销毁时清除所有的state状态\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return\r\n    }\r\n  }\r\n\r\n  renderTime = (date) => {\r\n    var dateee = new Date(date).toJSON();\r\n    return new Date(+new Date(dateee) + 8 * 3600 * 1000).toISOString().replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '')\r\n  }\r\n\r\n  render() {\r\n    const { draftCount, officialCount, list, type, current } = this.state\r\n    const total = type ? draftCount : officialCount\r\n    let display = ''\r\n    let itemList = []\r\n    if (type === 0) {\r\n      display = officialCount === 0 ? 'none' : 'block'\r\n    } else {\r\n      display = draftCount === 0 ? 'none' : 'block'\r\n    }\r\n    if (list.length) {\r\n      itemList = list.map((item, index) => {\r\n        return (<div className='item' style={{ background: index % 2 === 0 ? '#fff' : '#ccc' }} key={index}>\r\n          <Link to={this.props.match.url + '/detail'}> <span className='title' onClick={() => { this.detail(item) }}> {item.title} </span></Link>\r\n          <div>\r\n            <span className='date'>{this.renderTime(item.time)}</span>\r\n            <span className='del' onClick={() => { this.remove(item) }} style={{ display: type ? 'none' : 'inline-block' }}>删除</span>\r\n            <span className='del' onClick={() => { this.compile(item) }} style={{ display: type ? 'inline-block' : 'none' }}>编辑</span>\r\n          </div>\r\n        </div>)\r\n      })\r\n    } else {\r\n      itemList = (<div className='item' >\r\n        <span>还有没内容嗷~~~ <Button type='primary' style={{ display: type ? 'none' : 'inline-block' }} onClick={this.goSub}>去发布</Button></span>\r\n      </div>)\r\n    }\r\n    \r\n    \r\n    return (\r\n      <Router>\r\n        <div id='home'>\r\n          <div className='tab'>\r\n            <Button type={this.state.type ? \"\" : 'primary'} onClick={this.official}>文章列表（{officialCount}）</Button>\r\n            <Button type={this.state.type ? \"primary\" : ''} onClick={this.draft}>草稿箱（{draftCount}）</Button>\r\n          </div>\r\n          <div className='item-cont'>\r\n            {itemList}\r\n          </div>\r\n          <Pagination current={current} defaultPageSize={this.page} total={total + 2} style={{ display: display }} ref='pagination' onChange={this.changePage} />\r\n          <Route path={this.props.match.url + '/detail'} component={Detail} />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport E from 'wangeditor'  // 这里引入wangeditor\r\nimport { Button, Input, message, Popconfirm } from \"antd\";\r\nimport Axios from 'axios'\r\n\r\nimport './style.css'\r\nconst text = '确定退出并返回首页？';\r\nexport default class Publish extends Component {\r\n  state = {\r\n    editorContent: '',\r\n    visible: false,\r\n    confirmLoading: false,\r\n    title: '',\r\n    id: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    const id = JSON.parse(localStorage.userInfo).id\r\n    this.setState({ id })\r\n    const elemMenu = this.refs.editorElemMenu;\r\n    const elemBody = this.refs.editorElemBody;\r\n    const editor = new E(elemMenu, elemBody)\r\n    // 使用 onchange 函数监听内容的变化，并实时更新到 state 中\r\n    editor.customConfig.onchange = html => {\r\n      console.log(editor.txt.html())\r\n      this.setState({\r\n        // editorContent: editor.txt.text()\r\n        editorContent: editor.txt.html()\r\n      })\r\n    }\r\n    editor.customConfig.menus = [\r\n      'head',  // 标题\r\n      'bold',  // 粗体\r\n      'fontSize',  // 字号\r\n      'fontName',  // 字体\r\n      'italic',  // 斜体\r\n      'underline',  // 下划线\r\n      'strikeThrough',  // 删除线\r\n      'foreColor',  // 文字颜色\r\n      'backColor',  // 背景颜色\r\n      'link',  // 插入链接\r\n      'list',  // 列表\r\n      'justify',  // 对齐方式\r\n      'quote',  // 引用\r\n      'emoticon',  // 表情\r\n      'image',  // 插入图片\r\n      // 'table',  // 表格\r\n      // 'video',  // 插入视频\r\n      // 'code',  // 插入代码\r\n      'undo',  // 撤销\r\n      'redo'  // 重复\r\n    ]\r\n    editor.customConfig.uploadImgShowBase64 = true\r\n    editor.create()\r\n\r\n    if (sessionStorage.draft) {\r\n      const item = JSON.parse(sessionStorage.draft)\r\n      if (item) {\r\n        this.setState({ title: item.title, editorContent: item.content })\r\n        editor.textSelector.children[0].innerHTML = item.content\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // 发布按钮\r\n  save = () => {\r\n    this.submitText('saveOfficial', '已发布')\r\n  }\r\n\r\n  // 发布\r\n  submitText = (save, info) => {\r\n    if (this.state.title && this.state.editorContent) {\r\n      const { id } = this.state\r\n      const content = this.state.editorContent\r\n      const title = this.state.title\r\n      const data = { id, title, content }\r\n      Axios.post('/api/'+ save, data).then(res => {\r\n        // console.log(res);\r\n        if (res.data.code === 0) {\r\n          message.info(info)\r\n          sessionStorage.draft = ''\r\n          this.props.history.push('/index/home')\r\n        }\r\n      })\r\n    } else {\r\n      message.info('请输入文章及文章名')\r\n    }\r\n  }\r\n\r\n  // 草稿\r\n  draft = () => {\r\n    this.submitText('saveDraft', '已存入草稿箱')\r\n  }\r\n\r\n  // 文章标题\r\n  title = (e) => {\r\n    const title = e.target.value\r\n    this.setState({ title })\r\n  }\r\n\r\n  // 确定取消\r\n  confirm = () => {\r\n    sessionStorage.draft = ''\r\n    this.props.history.push('/index/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"shop\">\r\n        <div className='fn-btn'>\r\n          <div className='detail'>用文字记录美好生活</div>\r\n          <Button type=\"primary\" className='save' onClick={this.save}>发布</Button>\r\n          <Button type=\"primary\" className='save' onClick={this.draft}>存草稿</Button>\r\n          <Popconfirm placement=\"bottom\" title={text} onConfirm={this.confirm} okText=\"Yes\" cancelText=\"No\">\r\n            <Button type=\"primary\" className='save' onClick={this.cancel}>取消</Button>\r\n          </Popconfirm>\r\n        </div>\r\n        <Input className='title' placeholder='请输入文章名' value={this.state.title} onChange={this.title} />\r\n        <div className=\"text-area\" >\r\n          {/* 菜单 */}\r\n          <div className=\"editorElem-menu\" ref=\"editorElemMenu\" style={{ backgroundColor: '#f1f1f1', border: \"1px solid #ccc\" }}></div>\r\n          {/* 主题 */}\r\n          <div className=\"editorElem-body\" ref=\"editorElemBody\" style={{ padding: \"0 10px\", overflowY: \"scroll\", height: 400, border: \"1px solid #ccc\", borderTop: \"none\" }}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\nimport { Modal, Input, Upload, Icon, message } from 'antd'\r\nimport Axios from \"axios\";\r\n\r\nimport Header from './../../components/Header/index'\r\nimport Home from './../Home'\r\nimport Publish from './../Publish'\r\nimport './style.css'\r\nexport default class Index extends Component {\r\n\r\n  state = {\r\n    visible: false,\r\n    confirmLoading: false,\r\n    loading: false,\r\n    imageUrl: '',\r\n    imgUrl: '',\r\n    user: '',\r\n    type: false\r\n  }\r\n\r\n  // 确认修改资料\r\n  handleOk = () => {\r\n    const { imageUrl } = this.state\r\n    const user = this.user.state.value\r\n    if (imageUrl !== '' && user !== undefined) {\r\n      this.setState({ user })\r\n      const id = JSON.parse(localStorage.userInfo).id\r\n      const data = { id, imageUrl, user }\r\n      this.setState({ confirmLoading: true, type: true });\r\n      Axios.post('/api/updateInfo', data).then(res => {\r\n        console.log(res.data);\r\n        if (res.data.code === 0) {\r\n          this.setState({ confirmLoading: false, visible: false, type: false });\r\n          localStorage.userInfo = JSON.stringify(res.data.data)\r\n        }\r\n      })\r\n    } else {\r\n      message.info('请填写完整信息')\r\n      return\r\n    }\r\n  };\r\n\r\n  // 上传头像\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        }),\r\n      );\r\n      const imgUrl = info.file.name\r\n      this.setState({ imgUrl })\r\n    }\r\n  }\r\n\r\n  // 隐藏模态框\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  // 显示模态框\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 退出登录\r\n  loginOut = () => {\r\n    sessionStorage.loginState = ''\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { url } = this.props.match\r\n    const { visible, confirmLoading, imageUrl, user, type } = this.state\r\n    return (\r\n      <Router>\r\n        <div id='index'>\r\n          <Header loginOut={this.loginOut} showModal={this.showModal} info={{ imageUrl, user, type }} />\r\n          <div className=\"content\">\r\n            <nav id='nav'>\r\n              <NavLink to={url + '/home'}>首页</NavLink>\r\n              <NavLink to={url + '/publish'}>发布文章</NavLink>\r\n            </nav>\r\n            <div className='right-cont'>\r\n              <Route path='/index/home' component={Home}></Route>\r\n              <Route path='/index/publish' component={Publish}></Route>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 模态框 */}\r\n          <Modal className='modal' title=\"修改资料\" visible={visible} okText='确定' cancelText='取消' onOk={this.handleOk} confirmLoading={confirmLoading} onCancel={this.handleCancel}>\r\n            {/* 头像 */}\r\n            <Upload name=\"avatar\" listType=\"picture-card\" className=\"avatar-uploader\" showUploadList={false} action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\" beforeUpload={beforeUpload} onChange={this.handleChange} >\r\n              {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n            </Upload>\r\n            {/* 用户名 */}\r\n            <div className='nickname'>\r\n              <span className='name'>昵称：</span>\r\n              <Input placeholder=\"请输入新的昵称\" ref={value => this.user = value} />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from './pages/Login'\r\nimport Index from './pages/Index'\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='container'>\r\n          <Redirect from='/' to='/login' />\r\n          <Route path='/login' component={Login} />\r\n          <Route path='/index' component={Index} />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport App from './App'\r\nimport './App.css'\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}